type: json
data:
  url: /_nodes/stats/breaker,indices,transport,http,thread_pool,jvm,process,fs,script,discovery,ingest,adaptive_selection,os?format=smile
  server: ${ST_MONITOR_ES_NODE_HOSTPORT}
  basicHttpAuthUsername: ${ST_MONITOR_ES_NODE_BASICAUTH_USERNAME}
  basicHttpAuthPassword: ${ST_MONITOR_ES_NODE_BASICAUTH_PASSWORD}
  smileFormat: true

observation:
  - name: cpu_stats
    metricNamespace: es
    path: $.nodes.${nodeId}.os.cpu

    metric:
      - name: cpu.used
        source: percent
        type: gauge
        label: cpu percent
        description: used CPU percent

    tag:
      - name: es.node.id
        value: ${nodeId}
        
      - name: es.node
        value: json:smile:/_cluster/state/nodes?local=true&format=smile $.nodes.${nodeId}.name

      - name: es.node.role
        value: json:smile:/_cluster/state/nodes?local=true&format=smile $.nodes.${nodeId}.roles return:ConcatCollection()

  - name: load_stats
    metricNamespace: es
    path: $.nodes.${nodeId}.os.cpu.load_average

    metric:
      - name: load.1m
        source: 1m
        type: gauge
        label: load 1m
        description: average load for 1 minute

      - name: load.5m
        source: 5m
        type: gauge
        label: load 5m
        description: average load for 5 minutes

      - name: load.5m
        source: 5m
        type: gauge
        label: load 5m
        description: average load for 5 minutes

    tag:
      - name: es.node.id
        value: ${nodeId}
        
      - name: es.node
        value: json:smile:/_cluster/state/nodes?local=true&format=smile $.nodes.${nodeId}.name

      - name: es.node.role
        value: json:smile:/_cluster/state/nodes?local=true&format=smile $.nodes.${nodeId}.roles return:ConcatCollection()
