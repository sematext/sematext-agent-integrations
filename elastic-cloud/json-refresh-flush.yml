type: json
data:
  # use the same URL as other index-related collector configs which enables caching of response data and
  # reduced overhead SPM JSON-based monitor has on the system
  url: /_stats/indexing,store,search,merge,refresh,flush,docs,get,segments,recovery,completion,translog?level=shards&format=smile
  server: ${ST_MONITOR_ES_NODE_HOSTPORT}
  basicHttpAuthUsername: ${ST_MONITOR_ES_NODE_BASICAUTH_USERNAME}
  basicHttpAuthPassword: ${ST_MONITOR_ES_NODE_BASICAUTH_PASSWORD}
  smileFormat: true

observation:
  - name: refreshFlushStats_refresh_total
    metricNamespace: es
    path: $.indices.${indexName}.shards.${shard}[?(@.routing.node=${nodeId})].refresh

    metric:
      - name: indexing.refreshes.total
        source: total
        type: counter
        agentAggregation: SUM
        label: refresh count (all)
        description: refresh count on all (primary and replica) shards

      - name: indexing.refreshes.time.total
        source: total_time_in_millis
        type: counter
        agentAggregation: SUM
        label: refresh time (all)
        description: refresh time on all (primary and replica) shards
        unit: ms

    tag:
      - name: es.node.id
        value: ${nodeId}

      - name: es.index
        value: ${indexName}


  - name: refreshFlushStats_flush_total
    metricNamespace: es
    path: $.indices.${indexName}.shards.${shard}[?(@.routing.node=${nodeId})].flush

    metric:
      - name: indexing.flushes.total
        source: total
        type: counter
        agentAggregation: SUM
        label: flush count (all)
        description: flush count on all (primary and replica) shards

      - name: indexing.flushes.time.total
        source: total_time_in_millis
        type: counter
        agentAggregation: SUM
        label: flush time (all)
        description: flush time on all (primary and replica) shards
        unit: ms

    tag:
      - name: es.node.id
        value: ${nodeId}

      - name: es.index
        value: ${indexName}

