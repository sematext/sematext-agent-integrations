type: json
data:
  url: /_nodes/stats/breaker,indices,transport,http,thread_pool,jvm,process,fs,script,discovery,ingest,adaptive_selection,os?format=smile
  server: ${ST_MONITOR_ES_NODE_HOSTPORT}
  basicHttpAuthUsername: ${ST_MONITOR_ES_NODE_BASICAUTH_USERNAME}
  basicHttpAuthPassword: ${ST_MONITOR_ES_NODE_BASICAUTH_PASSWORD}
  smileFormat: true
  async: true

observation:
  - name: threadPoolStats
    metricNamespace: es
    path: $.nodes.${nodeId}.thread_pool.${threadPool}

    metric:
      - name: thread.pool.active
        source: active
        type: long_gauge
        label: active threads
        description: active threads

      - name: thread.pool.size
        source: threads
        type: long_gauge
        label: thread pool size
        description: thread pool size

      - name: thread.pool.queue
        source: queue
        type: long_gauge
        label: thread pool queue
        description: thread pool queue

      - name: thread.pool.rejected
        source: rejected
        type: counter
        label: rejected threads
        description: rejected threads

      - name: thread.pool.largest
        source: largest
        type: long_gauge
        label: thread pool largest
        description: thread pool largest

      - name: thread.pool.completed
        source: completed
        type: counter
        label: completed threads
        description: complete threads

    tag:
      - name: es.node.id
        value: ${nodeId}

      - name: es.thread.pool
        value: ${threadPool}
        
      - name: es.node
        value: json:smile:/_cluster/state/nodes?local=true&format=smile $.nodes.${nodeId}.name

      - name: es.node.role
        value: json:smile:/_cluster/state/nodes?local=true&format=smile $.nodes.${remoteNodeId}.roles return:ConcatCollection()

